name: Deploy to Ubuntu

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: rsync deployments
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude 'client' --exclude 'folders' --exclude '.env' --exclude 'node_modules' --exclude '.git'
          path: .
          remote_path: /home/ubuntu/webServer
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USERNAME }}
          remote_key: ${{ secrets.SERVER_PRIVATE_KEY }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/webServer
            # Create .env file on the server
            rm -f .env


            echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" >> .env
            echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
            echo "MONGO_CONNECTION=${{ secrets.MONGO_CONNECTION }}" >> .env
            echo "MAIL_API_KEY=${{ secrets.MAIL_API_KEY }}" >> .env
            echo "EMAIL=${{ secrets.EMAIL }}" >> .env
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "APP_PASSWORD=${{ secrets.APP_PASSWORD }}" >> .env
            echo "FIREBASE_TYPE=${{ secrets.FIREBASE_TYPE }}" >> .env
            echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
            echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env
            echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
            echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
            echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env
            echo "FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }}" >> .env
            echo "FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }}" >> .env
            echo "FIREBASE_AUTH_PROVIDER_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_CERT_URL }}" >> .env
            echo "FIREBASE_CLIENT_CERT_URL=${{ secrets.FIREBASE_CLIENT_CERT_URL }}" >> .env
            echo "FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}" >> .env
            echo "EMAIL=${{ secrets.EMAIL }}" >> .env
            echo "APP_PASSWORD=${{ secrets.APP_PASSWORD }}" >> .env
            echo "STRIPE_LIVE=${{ secrets.STRIPE_LIVE }}" >> .env

            # Install dependencies
            npm install
            # Start or restart the application
            pm2 reload all || pm2 start npm -- start
            sudo systemctl restart nginx
